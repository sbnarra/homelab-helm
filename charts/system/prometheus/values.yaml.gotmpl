_nodeAffinity: &nodeAffinity
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: affinity/{{ .Release.Namespace }}
          operator: Exists

# https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
kube-prometheus-stack:
  nameOverride: prometheus
  fullnameOverride: prometheus

  grafana:
    affinity: *nodeAffinity
    nameOverride: grafana
    fullnameOverride: grafana
    admin:
      existingSecret: grafana-credentials
    ingress:
      enabled: true
      hosts: [monitor.{{ .Values.domain }}]
      ingressClassName: traefik
      labels:
        startpage/icon: bar-chart-2
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
        traefik.ingress.kubernetes.io/router.middlewares: network-x-forwarded-https@kubernetescrd,network-traefik-forward-auth@kubernetescrd
    persistence:
      enabled: true
      type: pvc
      subPath: grafana/var/lib/grafana
      existingClaim: system-deployment-storage

  prometheus:
    prometheusSpec:
      affinity: *nodeAffinity
      retention: 30d
      retentionSize: 15GiB
      storageSpec:
        volumeClaimTemplate:
          metadata:
            name: db
          spec:
            volumeName: system-prometheus-storage
            selector:
            matchLabels:
              type: system-prometheus-storage
            accessModes: [ReadWriteMany]
            resources:
              requests:
                storage: 1Gi

  prometheusOperator:
    affinity: *nodeAffinity

  kube-state-metrics:
    nameOverride: kube-state-metrics
    fullnameOverride: kube-state-metrics
    affinity: *nodeAffinity

  prometheus-node-exporter:
    nameOverride: node-exporter
    fullnameOverride: node-exporter

  alertmanager:
    enabled: false

