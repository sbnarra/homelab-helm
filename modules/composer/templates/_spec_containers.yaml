{{- define "spec.containers" }}
containers:
- name: {{ .Release.Name }}
  image: {{ if .Values.image.registry }}{{ .Values.image.registry }}/{{ end }}{{ .Values.image.name }}:{{ .Values.image.tag }}
  imagePullPolicy: {{ .Values.image.pullPolicy }}
  {{- if .Values.command }}
  command:
  {{- range .Values.command }}
  - {{ tpl . $ | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.args }}
  args:
  {{- range .Values.args }}
  - {{ tpl . $ | quote }}
  {{- end }}
  {{- end }}
  securityContext:
    privileged: {{ or .Values.security.privileged .Values.gpu.enabled  }}
    {{- if .Values.security.capabilities }}
    capabilities:
      add:
      {{- range .Values.security.capabilities }}
      - {{ . }}
      {{- end }}
    {{- end }}
    {{- if .Values.security.seccomp }}
    seccompProfile:
      type: {{ .Values.security.seccomp }}
    {{- end }}
  {{- if .Values.probes.liveness.enabled }}
  livenessProbe:
    httpGet:
      path: {{ .Values.probes.liveness.path }}
      port: {{ .Values.probes.liveness.port }}
      {{- if .Values.probes.liveness.headers }}
      httpHeaders:
      {{- range .Values.probes.liveness.headers }}
      - name: {{ tpl .name $ }}
        value: {{ tpl .value $ }}
      {{- end }}
      {{- end }}
    initialDelaySeconds: {{ .Values.probes.liveness.delay }}
    periodSeconds: {{ .Values.probes.liveness.interval }}
    timeoutSeconds: {{ .Values.probes.liveness.timeout }}
    failureThreshold: {{ .Values.probes.liveness.threshold }}
  {{- end }}
  {{- if and .Values.probes.startup.enabled }}
  startupProbe:
    httpGet:
      path: {{ .Values.probes.startup.path }}
      port: {{ .Values.probes.startup.port }}
      {{- if .Values.probes.startup.headers }}
      httpHeaders:
      {{- range .Values.probes.startup.headers }}
      - name: {{ tpl .name $ }}
        value: {{ tpl .value $ }}
      {{- end }}
      {{- end }}
    initialDelaySeconds: {{ .Values.probes.startup.delay }}
    periodSeconds: {{ .Values.probes.startup.interval }}
    timeoutSeconds: {{ .Values.probes.startup.timeout }}
    failureThreshold: {{ .Values.probes.startup.threshold }}
  {{- end }}
  env:
  - name: NODENAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  - name: POD_IP
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
  {{- range $k, $v := .Values.fieldEnv }}
  - name: {{ $k }}
    valueFrom:
      fieldRef:
        fieldPath: {{ tpl (toString $v) $ | quote }}
  {{- end }}
  - name: TZ
    value: Europe/London
  - name: PUID
    value: {{ .Values.puid | default "1000" | quote }}
  - name: PGID
    value: {{ .Values.pgid | default "1000" | quote }}
  - name: UMASK
    value: "002"
  {{- range $k, $v := .Values.env }}
  - name: {{ $k }}
    value: {{ tpl (toString $v) $ | quote }}
  {{- end }}
  {{- range $k, $v := .Values.secretEnv }}
  - name: {{ $k }}
    valueFrom:
      secretKeyRef:
        name: {{ include "helpers.secret-env-key" $ }}
        key: {{ $k }}
  {{- end }}
  {{- if .Values.ports }}
  ports:
  {{- range .Values.ports.ClusterIP }}
  - containerPort: {{ .port }}
    name: {{ .name | default "web" }}
    protocol: {{ .protocol | default "TCP" }}
  {{- end }}
  {{- range .Values.ports.LoadBalancer }}
  - containerPort: {{ .port }}
    name: {{ .name | default "web" }}
    protocol: {{ .protocol | default "TCP" }}
  {{- end }}
  {{- end }}
{{- include "spec.volumes-mount" . | indent 2 }}

{{- if .Values.initContainers }}
initContainers:
{{- range .Values.initContainers }}
- name: {{ .name }}
  image: {{ .image }}
  command:
  {{- range .command }}
  - {{ . }}
  {{- end }}
{{- include "spec.volumes-mount" $ | indent 2 }}
{{- end }}
{{- end }}
{{- include "spec.volumes-spec" $ }}
{{- if .Values.security.sysctls }}
securityContext:
  sysctls:
  {{- range $k, $v := .Values.security.sysctls }}
  - name: {{ $k | quote }}
    value: {{ $v | quote }}
  {{- end }}
{{- end }}
hostname: {{ .Release.Name }}
hostNetwork: {{ .Values.hostNetwork }}
dnsPolicy: {{ .Values.dnsPolicy | default "ClusterFirst" }}
dnsConfig:
  options:
  - name: ndots
    value: {{ .Values.ndots | default 1 | quote }}
{{- if .Values.serviceAccountName }}
serviceAccountName: {{ .Values.serviceAccountName }}
{{- end }}
{{- end }}